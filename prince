@app.route('/login', methods=['GET', 'POST'])
def login():
    form = LoginForm()

    if form.validate_on_submit():
        role = form.userrole.data
        email = form.email.data
        password = form.password.data

        # Check user credentials
        if role == 'user':
            checkuser = user_login_form(role, email, password)
            checkadmin = admin_login_form(role, email, password)

            if checkuser == "Incorrect":
                flash("Invalid credentials or incorrect password.")
                return redirect(url_for('login'))
            elif checkuser == "No Data":
                flash("No user found. Please register.")
                return redirect(url_for("register"))
            elif checkadmin:
                flash("Admin cannot login as user.")
                return redirect(url_for("login"))
            else:
                # Session should be set here
                session['username'] = checkuser
                session.permanent = True  # Keeps session on page reload
                flash("User login successful")
                return redirect(url_for('index'))  # Redirect to a page after login

        elif role == 'admin':
            checkuser = user_login_form(role, email, password)
            checkadmin = admin_login_form(role, email, password)

            if checkadmin == "Incorrect":
                flash("Invalid credentials or incorrect password.")
                return redirect(url_for('login'))
            elif checkadmin == "No Data":
                flash("No admin found. Please register.")
                return redirect(url_for("register"))
            elif checkuser:
                flash("User cannot login as admin.")
                return redirect(url_for("login"))
            else:
                # Session should be set here
                session['username'] = checkadmin
                session.permanent = True  # Keeps session on page reload
                flash("Admin login successful")
                return redirect(url_for('index'))  # Redirect to a page after login

    # If GET request or invalid POST (form not valid), reset fields only after POST
    if request.method == 'GET':  # After refresh or page reload
        form.email.data = ""
        form.password.data = ""

    return render_template("login.html", res=form)
