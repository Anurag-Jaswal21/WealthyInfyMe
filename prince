@app.route('/login', methods=['GET', 'POST'])
def login():
    msg = session.get('msg', '')
    form = LoginForm()

    if form.validate_on_submit():
        role = form.userrole.data
        email = form.email.data
        password = form.password.data

        if role == 'user':
            checkuser = user_login_form(role, email, password)
            checkadmin = admin_login_form(role, email, password)

            if checkuser == "Incorrect":
                flash("Invalid credentials or incorrect password.")
                return redirect(url_for('login'))
            elif checkuser == "No Data":
                flash("No user found. Please register.")
                return redirect(url_for("register"))
            elif checkadmin:
                flash("Admin cannot login as user.")
                return redirect(url_for("login"))
            else:
                session['username'] = checkuser
                session.permanent = True  # ✅ Keeps session on page reload
                flash("User login successful")
                return render_template("message.html")

        elif role == 'admin':
            checkuser = user_login_form(role, email, password)
            checkadmin = admin_login_form(role, email, password)

            if checkadmin == "Incorrect":
                flash("Invalid credentials or incorrect password.")
                return redirect(url_for('login'))
            elif checkadmin == "No Data":
                flash("No admin found. Please register.")
                return redirect(url_for("register"))
            elif checkuser:
                flash("User cannot login as admin.")
                return redirect(url_for("login"))
            else:
                session['username'] = checkadmin
                session.permanent = True  # ✅ Keeps session on page reload
                flash("Admin login successful")
                return render_template("message.html")

    return render_template("login.html", res=form, message=msg)



{{ res.hidden_tag() }}



from datetime import timedelta

app.permanent_session_lifetime = timedelta(minutes=30)
