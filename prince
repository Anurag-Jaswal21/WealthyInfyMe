from flask import Flask,render_template,redirect,url_for,session,request,flash
from flask_mysqldb import MySQL 
from config import Config
from form import LoginForm,RegisterForm,BookingForm
from main import user_login_form,user_register_form,admin_login_form,admin_register_form,book_events,get_admin_data,get_user_data
from flask_wtf.csrf import CSRFProtect
from flask import session

app = Flask(__name__)
app.secret_key="your_secret_key_here"
csrf=CSRFProtect(app)
app.config.from_object(Config)
mysql = MySQL(app)


@app.route('/')
def home():
   return render_template('home.html')

@app.route('/index')
def index():
    if 'username' in session:
       username=session['username']
       user_data=get_user_data(username)
       admin_data=get_admin_data(username)

       if user_data :
         return render_template('index.html',user=user_data)
       elif admin_data:
          return render_template('index.html',user=admin_data)
       else:
          flash('User not found')
          return redirect(url_for('login'))
    else:
       flash("Please log in first")
       return redirect(url_for('login'))
    
@app.route('/cartheme', methods=['POST','GET'])
def cartheme():
    return render_template('carthemes.html')

@app.route('/birthdaytheme', methods=['POST','GET'])
def birthdaytheme():
    return render_template('birthdaythemes.html')

@app.route('/resturanttheme', methods=['POST','GET'])
def resturanttheme():
    return render_template('resturantthemes.html')

@app.route('/showtheme', methods=['POST','GET'])
def showtheme():
    return render_template('showthemes.html')

@app.route('/profile')
def profile():
    if 'username' in session:
       username=session['username']
       user_data=get_user_data(username)
       admin_data=get_admin_data(username)

       if user_data :
         return render_template('index.html',user=user_data)
       elif admin_data:
          return render_template('index.html',user=admin_data)
       else:
          flash('User not found')
          return redirect(url_for('login'))
    else:
       flash("Please log in first")
       return redirect(url_for('login'))
   

@app.route('/register',methods=['GET','POST']) 
def register():
   res=RegisterForm()
   print("form submitted:",res.validate_on_submit())
   if res.validate_on_submit():
       role=res.userrole.data
       name=res.name.data
       gender=res.gender.data
       phone=res.phone.data
       email=res.email.data
       password=res.password.data

       if role=='user':
          checkuser=user_register_form(role,name,gender,phone,email,password)
          checkadmin=admin_register_form(role,name,gender,phone,email,password)
          if checkuser == 0:
             flash("User Register successfully")
             return redirect(url_for('login'))
          elif checkuser == 1:
             flash("User Exists Already")
             return redirect(url_for('login'))
          elif checkadmin:
             flash("Error:Admin credentails cannot be used as user")
             return redirect(url_for('register'))
          else:
             flash("Registration failed.Please fix the errors and try again")
             return redirect(url_for('register'))

       elif role=='admin':
          checkadmin=admin_register_form(role,name,gender,phone,email,password)
          checkuser=user_register_form(role,name,gender,phone,email,password)
          if checkadmin == 0:
            flash("Admin Register Successful")
            return redirect(url_for('login'))
          elif checkadmin == 1:
             flash("Admin Exists Already")
             return redirect(url_for('login'))
          elif checkuser:
            flash("Error:User credentails cannot be used as Admin")
            return redirect(url_for('register'))
          else:
            flash('Registration failed.Please fix the errors and try again')
            return redirect(url_for('register'))

   return render_template('register.html',res=res) 

@app.route('/login', methods=['GET', 'POST'])
def login():
    msg = session.get('msg', '')  # Retrieve any message from session
    form = LoginForm()  # Initialize the login form
    
    if form.validate_on_submit():  # Check if form is submitted and valid
        role = form.userrole.data  # Get the role from the form
        email = form.email.data  # Get email from the form
        password = form.password.data  # Get password from the form
        
        print(f'Form submitted successfully. Role: {role}, Email: {email}')
        
        if role == 'user':
            checkuser = user_login_form(role, email, password)
            checkadmin = admin_login_form(role, email, password)
            print(f"user_login return: {checkuser}")
            
            # Logic for user login
            if checkuser == "Incorrect":
                flash("Invalid credentials or incorrect password. Please try again.")
                return redirect(url_for('login'))
            elif checkuser == "No Data":
                flash("No user found. Please register yourself.")
                return redirect(url_for("register"))
            elif checkadmin:
                flash("Error: Admin cannot log in as a user.")
                return redirect(url_for("login"))
            else:
                session['username'] = checkuser  # Store the username in session
                print(session['username'])
                flash("User login successful")
                return render_template("message.html")

        elif role == 'admin':
            checkuser = user_login_form(role, email, password)
            checkadmin = admin_login_form(role, email, password)
            print(f"admin_login return: {checkadmin}")
            
            # Logic for admin login
            if checkadmin == "Incorrect":
                flash("Invalid credentials or incorrect password. Please try again.")
                return redirect(url_for('login'))
            elif checkadmin == "No Data":
                flash("No admin found. Please register yourself.")
                return redirect(url_for("register"))
            elif checkuser:
                flash("Error: User cannot log in as admin.")
                return redirect(url_for('login'))
            else:
                session['username'] = checkadmin  # Store the admin username in session
                print(session['username'])
                flash("Admin login successful")
                return render_template("message.html")
    
    # Clear the session message if any
    session.pop('msg', None)
    return render_template("login.html", form=form, res=msg)

@app.route('/booking',methods=['GET','POST'])
def booking():
   res=BookingForm()
   if res.validate_on_submit():
      date=res.date.data
      starttime=res.starttime.data
      endtime=res.endtime.data
      location=res.location.data
      booking_status=book_events(date,starttime,endtime,location)
      print(f"Booking Status return:{booking_status}")
      if booking_status==0:
         flash("Booking Succesfully")
         return redirect(url_for("home"))
      elif booking_status == 1:
         flash("Already booked.Choose another slot")
         return redirect(url_for("booking"))
   return render_template('booking.html',res=res)

@app.route('/logout')
def logout():
    session.clear()
    return redirect(url_for('login'))                


if __name__=='__main__':
  app.run(debug=True)










 



login .html

<!-- <!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <link rel="stylesheet" href="{{ url_for('static', filename='css/form.css') }}">
   <title>Login Page</title>
      
</head>
<body>
    <center>
<div class="container">
   {% with messages=get_flashed_messages(with_categories=true) %}
   {% if messages %}
      {% for category, message in messages %}
      <div class="flash-message">{{message}}</div>
   {% endfor %}
   {% endif %}
   {% endwith %}
      <div class="form"> 
       <h2>LOGIN IN</h2>
       <form action="/login"  method="POST">
           {{res.csrf_token }}
           {{res.hidden_tag()}}
           {{res.userrole(class_="select")}} <br> <br>
           {{res.email.label}} <br>
           {{res.email(class_="datafield",placeholder="User Name")}} <br> <br>
           {% for error in res.email.errors %}
           <span style="color:blue">{{error}}</span> <br> <br>
           {% endfor %}
           {{res.password.label}} <br> 
           {{res.password(class_="datafield",placeholder="Password")}} <br> <br>
           {% for error in res.password.errors %}
           <span style="color:blue">{{error}}</span> <br> <br> <br>
           {% endfor %}
           {{res.submit(class_="button")}}
           <div class="link">
            <p>Don't have an account? <a href="/register">Register here</a></p>
         </div>
       </form>
      </div>
   </div> 
</center> 
</body>
</html>


    -->


    <!-- <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Login Page</title>
        <style>
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #1e1e1e;
            }
    
            .container {
                display: flex;
                justify-content: center;
                align-items: center;
                height: 100vh;
                background: linear-gradient(135deg, #878baa, #be94a5, #878baa, rgb(163, 175, 140));
            }
    
            .image-container {
                flex: 1;
                display: flex;
                justify-content: center;
                align-items: center;
            }
    
            .image-container img {
                width: 80%;
                max-width: 400px;
                height: auto;
                border-radius: 10px;
            }
    
            .form-container {
                flex: 1;
                background-color: white;
                padding: 40px;
                border-radius: 10px;
                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
                width: 350px;
                margin: 20px;
            }
    
            .select, .datafield {
                width: 100%;
                padding: 10px;
                margin: 10px 0;
                border: 1px solid #ccc;
                border-radius: 5px;
            }
    
            .button {
                width: 100%;
                padding: 10px;
                background-color: #4a55b8;
                color: white;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                margin: 10px 0;
            }
    
            .button:hover {
                background-color: #3a4474;
            }
    
            h2 {
                text-align: center;
                margin-bottom: 1rem;
            }
    
            .link {
                text-align: center;
                margin-top: 1rem;
            }
    
            .link a {
                color: #007BFF;
                text-decoration: none;
            }
    
            .link a:hover {
                text-decoration: underline;
            }
    
            .flash-message {
                margin: 20px auto;
                padding: 15px 25px;
                width: 90%;
                background-color: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
                border-radius: 5px;
                text-align: center;
                font-weight: bold;
                animation: fadeOut 1s ease-out 2s forwards;
            }
    
            @keyframes fadeOut {
                to {
                    opacity: 0;
                    visibility: hidden;
                }
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="image-container">
                <img src="{{ url_for('static', filename='img/login.webp') }}" alt="Login Image">
            </div>
            <div class="form-container">
                {% with messages=get_flashed_messages(with_categories=true) %}
                {% if messages %}
                    {% for category, message in messages %}
                        <div class="flash-message">{{ message }}</div>
                    {% endfor %}
                {% endif %}
                {% endwith %}
                
                <h2>LOGIN</h2>
                <form action="/login" method="POST" autocomplete="off">
                    {{ res.csrf_token }}
                    {{ res.hidden_tag() }}
                    {{ res.userrole(class_="select") }} <br><br>
                    
                    {{ res.email.label }} <br>
                    {{ res.email(class_="datafield", placeholder="User Name") }} <br>
                    {% for error in res.email.errors %}
                        <span style="color:blue">{{ error }}</span><br>
                    {% endfor %}
    
                    {{ res.password.label }} <br>
                    {{ res.password(class_="datafield", placeholder="Password") }} <br>
                    {% for error in res.password.errors %}
                        <span style="color:blue">{{ error }}</span><br>
                    {% endfor %}
    
                    {{ res.submit(class_="button") }}
    
                    <div class="link">
                        <p>Don't have an account? <a href="/register">Register here</a></p>
                    </div>
                </form>
            </div>
        </div>
    </body>
    </html> -->


    <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Login Page</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #1e1e1e;
    }

    .container {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background: linear-gradient(135deg, #878baa, #be94a5, #878baa, rgb(163, 175, 140));
    }

    .card {
      display: flex;
      width: 800px; /* Fixed width for consistency */
      height: 450px; /* Fixed height for consistency */
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
      border-radius: 10px;
      overflow: hidden; /* Ensures image and form fit perfectly */
    }

    .image-container {
      flex: 1;
    }

    .image-container img {
      width: 100%;
      height: 100%;
      object-fit: cover; /* ✨ Stretch image to fill container */
    }

    .form-container {
      flex: 1;
      background-color: white;
      padding: 40px;
      box-sizing: border-box;
    }

    h2 {
      text-align: center;
      margin-bottom: 1rem;
    }

    .select, .datafield {
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    .button {
      width: 100%;
      padding: 10px;
      background-color: #4a55b8;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin: 10px 0;
    }

    .button:hover {
      background-color: #3a4474;
    }

    .link {
      text-align: center;
      margin-top: 1rem;
    }

    .link a {
      color: #007BFF;
      text-decoration: none;
    }

    .link a:hover {
      text-decoration: underline;
    }

    .flash-message {
      margin: 10px auto;
      padding: 10px 20px;
      background-color: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
      border-radius: 5px;
      text-align: center;
      font-weight: bold;
      animation: fadeOut 1s ease-out 2s forwards;
    }

    @keyframes fadeOut {
      to {
        opacity: 0;
        visibility: hidden;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="card"> <!-- ✨ New wrapper to keep image and form equal and tight -->
      <div class="image-container">
         <img src="{{ url_for('static', filename='img/login.webp') }}" alt="Login Image">
      </div>
      <div class="form-container">
        {% with messages=get_flashed_messages(with_categories=true) %}
          {% if messages %}
            {% for category, message in messages %}
              <div class="flash-message">{{ message }}</div>
            {% endfor %}
          {% endif %}
        {% endwith %}

        <h2>LOGIN</h2>
        <form action="/login" method="POST" autocomplete="off">
          {{ res.csrf_token }}
          {{ res.hidden_tag() }}

          {{ res.userrole(class_="select") }}<br><br>

          {{ res.email.label }}<br>
          {{ res.email(class_="datafield", placeholder="User Name") }}<br>
          {% for error in res.email.errors %}
            <span style="color:blue">{{ error }}</span><br>
          {% endfor %}

          {{ res.password.label }}<br>
          {{ res.password(class_="datafield", placeholder="Password") }}<br>
          {% for error in res.password.errors %}
            <span style="color:blue">{{ error }}</span><br>
          {% endfor %}

          {{ res.submit(class_="button") }}

          <div class="link">
            <p>Don't have an account? <a href="/register">Register here</a></p>
          </div>
        </form>
      </div>
    </div>
  </div>
</body>
</html>
