@app.route('/login', methods=['GET', 'POST'])
def login():
    msg = session.get('msg', '')  # Retrieve any message from session
    form = LoginForm()  # Initialize the login form
    
    if form.validate_on_submit():  # Check if form is submitted and valid
        role = form.userrole.data  # Get the role from the form
        email = form.email.data  # Get email from the form
        password = form.password.data  # Get password from the form
        
        print(f'Form submitted successfully. Role: {role}, Email: {email}')
        
        if role == 'user':
            checkuser = user_login_form(role, email, password)
            checkadmin = admin_login_form(role, email, password)
            print(f"user_login return: {checkuser}")
            
            # Logic for user login
            if checkuser == "Incorrect":
                flash("Invalid credentials or incorrect password. Please try again.")
                return redirect(url_for('login'))
            elif checkuser == "No Data":
                flash("No user found. Please register yourself.")
                return redirect(url_for("register"))
            elif checkadmin:
                flash("Error: Admin cannot log in as a user.")
                return redirect(url_for("login"))
            else:
                session['username'] = checkuser  # Store the username in session
                print(session['username'])
                flash("User login successful")
                return render_template("message.html")

        elif role == 'admin':
            checkuser = user_login_form(role, email, password)
            checkadmin = admin_login_form(role, email, password)
            print(f"admin_login return: {checkadmin}")
            
            # Logic for admin login
            if checkadmin == "Incorrect":
                flash("Invalid credentials or incorrect password. Please try again.")
                return redirect(url_for('login'))
            elif checkadmin == "No Data":
                flash("No admin found. Please register yourself.")
                return redirect(url_for("register"))
            elif checkuser:
                flash("Error: User cannot log in as admin.")
                return redirect(url_for('login'))
            else:
                session['username'] = checkadmin  # Store the admin username in session
                print(session['username'])
                flash("Admin login successful")
                return render_template("message.html")
    
    # Clear the session message if any
    session.pop('msg', None)
    return render_template("login.html", form=form, msg=msg)
